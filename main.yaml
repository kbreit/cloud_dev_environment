- name: Create Droplet in Digital Ocean
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - include_vars:
        file: vars
    - name: Query one tag
      digital_ocean_tag_facts:
        oauth_token: '{{do_api_token}}'
        tag_name: development
      register: one_tag
    - set_fact:
        dev_droplet_id: '{{one_tag.data.resources.droplets.last_tagged.id}}'
        droplet_exists: yes
      when: one_tag.data.resources.count == 1
    - include_role:
        name: droplet
      when: droplet_exists is not defined
    - include_role:
        name: route53
      when: droplet_exists is not defined
    - add_host:
        name: "{{fqdn}}"
        groups: do
      changed_when: False
      when: fqdn is defined
    - add_host:
        name: "{{aws_record}}.{{aws_zone}}"
        groups: do
      changed_when: False
      when: fqdn is not defined

- name: Provision development droplet
  hosts: do
  remote_user: root
  gather_facts: False
  vars:
    ansible_ssh_private_key_file: "{{lookup('file', ssh_key_path)}}"
  pre_tasks:
    - name: Wait for port 22 to become available
      local_action: "wait_for port=22 host={{inventory_hostname}}"
    - name: 'Install Python'
      raw: apt-get -y install python
  tasks:
    - include_vars:
        file: vars
    - name: Create user
      user:
        name: "{{username}}"
        shell: /bin/bash
    - name: Create .ssh directory
      file:
        path: "~{{username}}/.ssh"
        state: directory
        owner: "{{username}}"
        group: "{{username}}"
        mode: 0700
    - name: Upload SSH key
      copy:
        src: "{{ssh_key_path}}"
        dest: "~{{username}}/.ssh"
        owner: "{{username}}"
        group: "{{username}}"
        mode: 0700
    - name: Upload SSH public key
      authorized_key:
        user: kbreit
        state: present
        key: "{{lookup('file', public_key_file)}}"
    - name: Install apt Python libraries
      command: apt-get -y install python-apt python3-apt
    - name: Install programs
      apt:
        state: present
        name: "{{packages}}"
      vars:
        packages:
          - tmux
          - git
          - vim
    - name: Clone git repositories
      git:
        dest: "~/"
        repo: "{{repos}}"
      vars:
        repos:
          - git@github.com:kbreit/ansible-playbooks.git
          - git@github.com:kbreit/ansible.git
    - name: Add git remote for Ansible
      command: git --work-tree ~/ansible remote add upstream git@github.com:ansible/ansible.git